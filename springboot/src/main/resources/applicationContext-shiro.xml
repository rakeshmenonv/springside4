<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd"
	default-lazy-init="true">

	<description>Shiro安全配置</description>

	<!-- 权限管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- 数据库认证的实现 com.infotop.webharvest.system.account.service.ShiroDbRealm -->
		<property name="realm" ref="shiroDbRealm" />

		<!-- 缓存管理器 -->
		<property name="cacheManager" ref="shiroEhcacheManager" />
	</bean>

	<!-- session管理器 -->
	<!-- <bean id="sessionManager" -->
	<!-- class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager"> -->
	<!-- 超时时间 -->
	<!-- <property name="globalSessionTimeout" value="1800000" /> -->
	<!-- session存储的实现 -->
	<!-- <property name="sessionDAO" ref="shiroSessionDao" /> -->
	<!-- sessionIdCookie的实现,用于重写覆盖容器默认的JSESSIONID -->
	<!-- <property name="sessionIdCookie" ref="sharesession" /> -->
	<!-- 定时检查失效的session -->
	<!-- <property name="sessionValidationSchedulerEnabled" value="true" /> -->
	<!-- </bean> -->

	<!-- sessionIdCookie的实现,用于重写覆盖容器默认的JSESSIONID -->
	<!-- <bean id="sharesession" class="org.apache.shiro.web.servlet.SimpleCookie"> -->
	<!-- cookie的name,对应的默认是 JSESSIONID -->
	<!-- <constructor-arg name="name" value="SHAREJSESSIONID" /> -->
	<!-- </bean> -->

	<!-- session存储的实现 -->
	<!-- <bean id="shiroSessionDao" -->
	<!-- class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO" /> -->






	<!-- 項目自定义的Realm, 所有accountService依赖的dao都需要用depends-on声明 -->
	<bean id="shiroDbRealm" class="org.springboot.system.account.service.ShiroDbRealm"
		depends-on="userDao,roleDao">
		<property name="accountService" ref="accountService" />
	</bean>

	<!-- Shiro Filter -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login" />
		<property name="successUrl" value="/home" />
		<property name="filters">
			<map>
				<entry key="authc" value-ref="captchaFormAuthenticationFilter" />
			</map>
		</property>
		<property name="filterChainDefinitions">
			<value>
				/login = authc
				/logout = logout
				/static/** = anon
				/register/** = anon
				/** = user
			</value>
		</property>
	</bean>

	<!-- 用户授权信息Cache, 采用EhCache -->
	<bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:ehcache/ehcache-shiro.xml" />
	</bean>

	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<!-- AOP式方法级权限检查 -->
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
	<bean id="captchaFormAuthenticationFilter"
		class="org.springboot.system.account.service.CaptchaFormAuthenticationFilter" />
</beans>